var sliceBuffer=require("../index.js");var expect=require("expect.js");describe("sliceBuffer",function(){describe("using standard slice",function(){it("should slice correctly with only start provided",function(){var e=new Uint8Array(10);for(var c=0;c<e.length;c++){e[c]=c}var a=sliceBuffer(e.buffer,3);var b=new Uint8Array(a);for(var c=3,d=0;c<e.length;c++,d++){expect(e[c]).to.equal(b[d])}});it("should slice correctly with start and end provided",function(){var e=new Uint8Array(10);for(var c=0;c<e.length;c++){e[c]=c}var a=sliceBuffer(e.buffer,3,8);var b=new Uint8Array(a);for(var c=3,d=0;c<8;c++,d++){expect(e[c]).to.equal(b[d])}});it("should slice correctly with negative start",function(){var e=new Uint8Array(10);for(var c=0;c<e.length;c++){e[c]=c}var a=sliceBuffer(e.buffer,-3);var b=new Uint8Array(a);for(var c=e.length-3,d=0;c<e.length;c++,d++){expect(e[c]).to.equal(b[d])}});it("should slice correctly with negative end",function(){var e=new Uint8Array(10);for(var c=0;c<e.length;c++){e[c]=c}var a=sliceBuffer(e.buffer,0,-3);var b=new Uint8Array(a);for(var c=0,d=0;c<e.length-3;c++,d++){expect(e[c]).to.equal(b[d])}});it("should slice correctly with negative start and end",function(){var e=new Uint8Array(10);for(var c=0;c<e.length;c++){e[c]=c}var a=sliceBuffer(e.buffer,-6,-3);var b=new Uint8Array(a);for(var c=e.length-6,d=0;c<e.length-3;c++,d++){expect(e[c]).to.equal(b[d])}});it("should slice correctly with equal start and end",function(){var c=new Uint8Array(10);for(var b=0;b<c.length;b++){c[b]=b}var a=sliceBuffer(c.buffer,1,1);expect(a.byteLength).to.equal(0)});it("should slice correctly when end larger than buffer",function(){var c=new Uint8Array(10);for(var b=0;b<c.length;b++){c[b]=b}var a=sliceBuffer(c.buffer,0,100);expect(new Uint8Array(a)).to.eql(c)});it("shoud slice correctly when start larger than end",function(){var c=new Uint8Array(10);for(var b=0;b<c.length;b++){c[b]=b}var a=sliceBuffer(c.buffer,6,5);expect(a.byteLength).to.equal(0)})});describe("using fallback",function(){it("should slice correctly with only start provided",function(){var f=new Uint8Array(10);for(var c=0;c<f.length;c++){f[c]=c}var e=f.buffer;e.slice=undefined;var a=sliceBuffer(e,3);var b=new Uint8Array(a);for(var c=3,d=0;c<f.length;c++,d++){expect(f[c]).to.equal(b[d])}});it("should slice correctly with start and end provided",function(){var f=new Uint8Array(10);for(var c=0;c<f.length;c++){f[c]=c}var e=f.buffer;e.slice=undefined;var a=sliceBuffer(e,3,8);var b=new Uint8Array(a);for(var c=3,d=0;c<8;c++,d++){expect(f[c]).to.equal(b[d])}});it("should slice correctly with negative start",function(){var f=new Uint8Array(10);for(var c=0;c<f.length;c++){f[c]=c}var e=f.buffer;e.slice=undefined;var a=sliceBuffer(e,-3);var b=new Uint8Array(a);for(var c=f.length-3,d=0;c<f.length;c++,d++){expect(f[c]).to.equal(b[d])}});it("should slice correctly with negative end",function(){var f=new Uint8Array(10);for(var c=0;c<f.length;c++){f[c]=c}var e=f.buffer;e.slice=undefined;var a=sliceBuffer(e,0,-3);var b=new Uint8Array(a);for(var c=0,d=0;c<f.length-3;c++,d++){expect(f[c]).to.equal(b[d])}});it("should slice correctly with negative start and end",function(){var f=new Uint8Array(10);for(var c=0;c<f.length;c++){f[c]=c}var e=f.buffer;e.slice=undefined;var a=sliceBuffer(e,-6,-3);var b=new Uint8Array(a);for(var c=f.length-6,d=0;c<f.length-3;c++,d++){expect(f[c]).to.equal(b[d])}});it("should slice correctly with equal start and end",function(){var d=new Uint8Array(10);for(var b=0;b<d.length;b++){d[b]=b}var c=d.buffer;c.slice=undefined;var a=sliceBuffer(c,1,1);expect(a.byteLength).to.equal(0)});it("should slice correctly when end larger than buffer",function(){var e=new Uint8Array(10);for(var c=0;c<e.length;c++){e[c]=c}var d=e.buffer;d.slice=undefined;var a=sliceBuffer(d,0,100);var b=new Uint8Array(a);for(var c=0;c<e.length;c++){expect(e[c]).to.equal(b[c])}});it("shoud slice correctly when start larger than end",function(){var d=new Uint8Array(10);for(var b=0;b<d.length;b++){d[b]=b}var c=d.buffer;c.slice=undefined;var a=sliceBuffer(c,6,5);expect(a.byteLength).to.equal(0)})})});