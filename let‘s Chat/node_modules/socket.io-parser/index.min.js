var debug=require("debug")("socket.io-parser");var Emitter=require("component-emitter");var hasBin=require("has-binary2");var binary=require("./binary");var isBuf=require("./is-buffer");exports.protocol=4;exports.types=["CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK"];exports.CONNECT=0;exports.DISCONNECT=1;exports.EVENT=2;exports.ACK=3;exports.ERROR=4;exports.BINARY_EVENT=5;exports.BINARY_ACK=6;exports.Encoder=Encoder;exports.Decoder=Decoder;function Encoder(){}Encoder.prototype.encode=function(b,c){if((b.type===exports.EVENT||b.type===exports.ACK)&&hasBin(b.data)){b.type=b.type===exports.EVENT?exports.BINARY_EVENT:exports.BINARY_ACK}debug("encoding packet %j",b);if(exports.BINARY_EVENT===b.type||exports.BINARY_ACK===b.type){encodeAsBinary(b,c)}else{var a=encodeAsString(b);c([a])}};function encodeAsString(a){var b=""+a.type;if(exports.BINARY_EVENT===a.type||exports.BINARY_ACK===a.type){b+=a.attachments+"-"}if(a.nsp&&"/"!==a.nsp){b+=a.nsp+","}if(null!=a.id){b+=a.id}if(null!=a.data){b+=JSON.stringify(a.data)}debug("encoded %j as %s",a,b);return b}function encodeAsBinary(b,c){function a(g){var e=binary.deconstructPacket(g);var f=encodeAsString(e.packet);var d=e.buffers;d.unshift(f);c(d)}binary.removeBlobs(b,a)}function Decoder(){this.reconstructor=null}Emitter(Decoder.prototype);Decoder.prototype.add=function(b){var a;if(typeof b==="string"){a=decodeString(b);if(exports.BINARY_EVENT===a.type||exports.BINARY_ACK===a.type){this.reconstructor=new BinaryReconstructor(a);if(this.reconstructor.reconPack.attachments===0){this.emit("decoded",a)}}else{this.emit("decoded",a)}}else{if(isBuf(b)||b.base64){if(!this.reconstructor){throw new Error("got binary data when not reconstructing a packet")}else{a=this.reconstructor.takeBinaryData(b);if(a){this.reconstructor=null;this.emit("decoded",a)}}}else{throw new Error("Unknown type: "+b)}}};function decodeString(f){var b=0;var e={type:Number(f.charAt(0))};if(null==exports.types[e.type]){return error()}if(exports.BINARY_EVENT===e.type||exports.BINARY_ACK===e.type){var a="";while(f.charAt(++b)!=="-"){a+=f.charAt(b);if(b==f.length){break}}if(a!=Number(a)||f.charAt(b)!=="-"){throw new Error("Illegal attachments")}e.attachments=Number(a)}if("/"===f.charAt(b+1)){e.nsp="";while(++b){var g=f.charAt(b);if(","===g){break}e.nsp+=g;if(b===f.length){break}}}else{e.nsp="/"}var d=f.charAt(b+1);if(""!==d&&Number(d)==d){e.id="";while(++b){var g=f.charAt(b);if(null==g||Number(g)!=g){--b;break}e.id+=f.charAt(b);if(b===f.length){break}}e.id=Number(e.id)}if(f.charAt(++b)){e=tryParse(e,f.substr(b))}debug("decoded %s as %j",f,e);return e}function tryParse(b,c){try{b.data=JSON.parse(c)}catch(a){return error()}return b}Decoder.prototype.destroy=function(){if(this.reconstructor){this.reconstructor.finishedReconstruction()}};function BinaryReconstructor(a){this.reconPack=a;this.buffers=[]}BinaryReconstructor.prototype.takeBinaryData=function(a){this.buffers.push(a);if(this.buffers.length===this.reconPack.attachments){var b=binary.reconstructPacket(this.reconPack,this.buffers);this.finishedReconstruction();return b}return null};BinaryReconstructor.prototype.finishedReconstruction=function(){this.reconPack=null;this.buffers=[]};function error(){return{type:exports.ERROR,data:"parser error"}};