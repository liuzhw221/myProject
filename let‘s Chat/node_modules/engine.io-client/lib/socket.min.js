var transports=require("./transports/index");var Emitter=require("component-emitter");var debug=require("debug")("engine.io-client:socket");var index=require("indexof");var parser=require("engine.io-parser");var parseuri=require("parseuri");var parsejson=require("parsejson");var parseqs=require("parseqs");module.exports=Socket;function Socket(c,b){if(!(this instanceof Socket)){return new Socket(c,b)}b=b||{};if(c&&"object"===typeof c){b=c;c=null}if(c){c=parseuri(c);b.hostname=c.host;b.secure=c.protocol==="https"||c.protocol==="wss";b.port=c.port;if(c.query){b.query=c.query}}else{if(b.host){b.hostname=parseuri(b.host).host}}this.secure=null!=b.secure?b.secure:(global.location&&"https:"===location.protocol);if(b.hostname&&!b.port){b.port=this.secure?"443":"80"}this.agent=b.agent||false;this.hostname=b.hostname||(global.location?location.hostname:"localhost");this.port=b.port||(global.location&&location.port?location.port:(this.secure?443:80));this.query=b.query||{};if("string"===typeof this.query){this.query=parseqs.decode(this.query)}this.upgrade=false!==b.upgrade;this.path=(b.path||"/engine.io").replace(/\/$/,"")+"/";this.forceJSONP=!!b.forceJSONP;this.jsonp=false!==b.jsonp;this.forceBase64=!!b.forceBase64;this.enablesXDR=!!b.enablesXDR;this.timestampParam=b.timestampParam||"t";this.timestampRequests=b.timestampRequests;this.transports=b.transports||["polling","websocket"];this.transportOptions=b.transportOptions||{};this.readyState="";this.writeBuffer=[];this.prevBufferLen=0;this.policyPort=b.policyPort||843;this.rememberUpgrade=b.rememberUpgrade||false;this.binaryType=null;this.onlyBinaryUpgrades=b.onlyBinaryUpgrades;this.perMessageDeflate=false!==b.perMessageDeflate?(b.perMessageDeflate||{}):false;if(true===this.perMessageDeflate){this.perMessageDeflate={}}if(this.perMessageDeflate&&null==this.perMessageDeflate.threshold){this.perMessageDeflate.threshold=1024}this.pfx=b.pfx||null;this.key=b.key||null;this.passphrase=b.passphrase||null;this.cert=b.cert||null;this.ca=b.ca||null;this.ciphers=b.ciphers||null;this.rejectUnauthorized=b.rejectUnauthorized===undefined?true:b.rejectUnauthorized;this.forceNode=!!b.forceNode;var a=typeof global==="object"&&global;if(a.global===a){if(b.extraHeaders&&Object.keys(b.extraHeaders).length>0){this.extraHeaders=b.extraHeaders}if(b.localAddress){this.localAddress=b.localAddress}}this.id=null;this.upgrades=null;this.pingInterval=null;this.pingTimeout=null;this.pingIntervalTimer=null;this.pingTimeoutTimer=null;this.open()}Socket.priorWebsocketSuccess=false;Emitter(Socket.prototype);Socket.protocol=parser.protocol;Socket.Socket=Socket;Socket.Transport=require("./transport");Socket.transports=require("./transports/index");Socket.parser=require("engine.io-parser");Socket.prototype.createTransport=function(b){debug('creating transport "%s"',b);var c=clone(this.query);c.EIO=parser.protocol;c.transport=b;var a=this.transportOptions[b]||{};if(this.id){c.sid=this.id}var d=new transports[b]({query:c,socket:this,agent:a.agent||this.agent,hostname:a.hostname||this.hostname,port:a.port||this.port,secure:a.secure||this.secure,path:a.path||this.path,forceJSONP:a.forceJSONP||this.forceJSONP,jsonp:a.jsonp||this.jsonp,forceBase64:a.forceBase64||this.forceBase64,enablesXDR:a.enablesXDR||this.enablesXDR,timestampRequests:a.timestampRequests||this.timestampRequests,timestampParam:a.timestampParam||this.timestampParam,policyPort:a.policyPort||this.policyPort,pfx:a.pfx||this.pfx,key:a.key||this.key,passphrase:a.passphrase||this.passphrase,cert:a.cert||this.cert,ca:a.ca||this.ca,ciphers:a.ciphers||this.ciphers,rejectUnauthorized:a.rejectUnauthorized||this.rejectUnauthorized,perMessageDeflate:a.perMessageDeflate||this.perMessageDeflate,extraHeaders:a.extraHeaders||this.extraHeaders,forceNode:a.forceNode||this.forceNode,localAddress:a.localAddress||this.localAddress,requestTimeout:a.requestTimeout||this.requestTimeout,protocols:a.protocols||void (0)});return d};function clone(b){var c={};for(var a in b){if(b.hasOwnProperty(a)){c[a]=b[a]}}return c}Socket.prototype.open=function(){var c;if(this.rememberUpgrade&&Socket.priorWebsocketSuccess&&this.transports.indexOf("websocket")!==-1){c="websocket"}else{if(0===this.transports.length){var a=this;setTimeout(function(){a.emit("error","No transports available")},0);return}else{c=this.transports[0]}}this.readyState="opening";try{c=this.createTransport(c)}catch(b){this.transports.shift();this.open();return}c.open();this.setTransport(c)};Socket.prototype.setTransport=function(b){debug("setting transport %s",b.name);var a=this;if(this.transport){debug("clearing existing transport %s",this.transport.name);this.transport.removeAllListeners()}this.transport=b;b.on("drain",function(){a.onDrain()}).on("packet",function(c){a.onPacket(c)}).on("error",function(c){a.onError(c)}).on("close",function(){a.onClose("transport close")})};Socket.prototype.probe=function(a){debug('probing transport "%s"',a);var d=this.createTransport(a,{probe:1});var f=false;var j=this;Socket.priorWebsocketSuccess=false;function e(){if(j.onlyBinaryUpgrades){var l=!this.supportsBinary&&j.transport.supportsBinary;f=f||l}if(f){return}debug('probe transport "%s" opened',a);d.send([{type:"ping",data:"probe"}]);d.once("packet",function(n){if(f){return}if("pong"===n.type&&"probe"===n.data){debug('probe transport "%s" pong',a);j.upgrading=true;j.emit("upgrading",d);if(!d){return}Socket.priorWebsocketSuccess="websocket"===d.name;debug('pausing current transport "%s"',j.transport.name);j.transport.pause(function(){if(f){return}if("closed"===j.readyState){return}debug("changing transport and sending upgrade packet");b();j.setTransport(d);d.send([{type:"upgrade"}]);j.emit("upgrade",d);d=null;j.upgrading=false;j.flush()})}else{debug('probe transport "%s" failed',a);var m=new Error("probe error");m.transport=d.name;j.emit("upgradeError",m)}})}function h(){if(f){return}f=true;b();d.close();d=null}function g(m){var l=new Error("probe error: "+m);l.transport=d.name;h();debug('probe transport "%s" failed because of error: %s',a,m);j.emit("upgradeError",l)}function k(){g("transport closed")}function i(){g("socket closed")}function c(l){if(d&&l.name!==d.name){debug('"%s" works - aborting "%s"',l.name,d.name);h()}}function b(){d.removeListener("open",e);d.removeListener("error",g);d.removeListener("close",k);j.removeListener("close",i);j.removeListener("upgrading",c)}d.once("open",e);d.once("error",g);d.once("close",k);this.once("close",i);this.once("upgrading",c);d.open()};Socket.prototype.onOpen=function(){debug("socket open");this.readyState="open";Socket.priorWebsocketSuccess="websocket"===this.transport.name;this.emit("open");this.flush();if("open"===this.readyState&&this.upgrade&&this.transport.pause){debug("starting upgrade probes");for(var b=0,a=this.upgrades.length;b<a;b++){this.probe(this.upgrades[b])}}};Socket.prototype.onPacket=function(b){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){debug('socket receive: type "%s", data "%s"',b.type,b.data);this.emit("packet",b);this.emit("heartbeat");switch(b.type){case"open":this.onHandshake(parsejson(b.data));break;case"pong":this.setPing();this.emit("pong");break;case"error":var a=new Error("server error");a.code=b.data;this.onError(a);break;case"message":this.emit("data",b.data);this.emit("message",b.data);break}}else{debug('packet received with socket readyState "%s"',this.readyState)}};Socket.prototype.onHandshake=function(a){this.emit("handshake",a);this.id=a.sid;this.transport.query.sid=a.sid;this.upgrades=this.filterUpgrades(a.upgrades);this.pingInterval=a.pingInterval;this.pingTimeout=a.pingTimeout;this.onOpen();if("closed"===this.readyState){return}this.setPing();this.removeListener("heartbeat",this.onHeartbeat);this.on("heartbeat",this.onHeartbeat)};Socket.prototype.onHeartbeat=function(b){clearTimeout(this.pingTimeoutTimer);var a=this;a.pingTimeoutTimer=setTimeout(function(){if("closed"===a.readyState){return}a.onClose("ping timeout")},b||(a.pingInterval+a.pingTimeout))};Socket.prototype.setPing=function(){var a=this;clearTimeout(a.pingIntervalTimer);a.pingIntervalTimer=setTimeout(function(){debug("writing ping packet - expecting pong within %sms",a.pingTimeout);a.ping();a.onHeartbeat(a.pingTimeout)},a.pingInterval)};Socket.prototype.ping=function(){var a=this;this.sendPacket("ping",function(){a.emit("ping")})};Socket.prototype.onDrain=function(){this.writeBuffer.splice(0,this.prevBufferLen);this.prevBufferLen=0;if(0===this.writeBuffer.length){this.emit("drain")}else{this.flush()}};Socket.prototype.flush=function(){if("closed"!==this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length){debug("flushing %d packets in socket",this.writeBuffer.length);this.transport.send(this.writeBuffer);this.prevBufferLen=this.writeBuffer.length;this.emit("flush")}};Socket.prototype.write=Socket.prototype.send=function(c,a,b){this.sendPacket("message",c,a,b);return this};Socket.prototype.sendPacket=function(c,d,a,b){if("function"===typeof d){b=d;d=undefined}if("function"===typeof a){b=a;a=null}if("closing"===this.readyState||"closed"===this.readyState){return}a=a||{};a.compress=false!==a.compress;var e={type:c,data:d,options:a};this.emit("packetCreate",e);this.writeBuffer.push(e);if(b){this.once("flush",b)}this.flush()};Socket.prototype.close=function(){if("opening"===this.readyState||"open"===this.readyState){this.readyState="closing";var a=this;if(this.writeBuffer.length){this.once("drain",function(){if(this.upgrading){c()}else{d()}})}else{if(this.upgrading){c()}else{d()}}}function d(){a.onClose("forced close");debug("socket closing - telling transport to close");a.transport.close()}function b(){a.removeListener("upgrade",b);a.removeListener("upgradeError",b);d()}function c(){a.once("upgrade",b);a.once("upgradeError",b)}return this};Socket.prototype.onError=function(a){debug("socket error %j",a);Socket.priorWebsocketSuccess=false;this.emit("error",a);this.onClose("transport error",a)};Socket.prototype.onClose=function(b,c){if("opening"===this.readyState||"open"===this.readyState||"closing"===this.readyState){debug('socket close with reason: "%s"',b);var a=this;clearTimeout(this.pingIntervalTimer);clearTimeout(this.pingTimeoutTimer);this.transport.removeAllListeners("close");this.transport.close();this.transport.removeAllListeners();this.readyState="closed";this.id=null;this.emit("close",b,c);a.writeBuffer=[];a.prevBufferLen=0}};Socket.prototype.filterUpgrades=function(c){var d=[];for(var b=0,a=c.length;b<a;b++){if(~index(this.transports,c[b])){d.push(c[b])}}return d};