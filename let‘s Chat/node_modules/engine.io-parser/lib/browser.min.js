var keys=require("./keys");var hasBinary=require("has-binary2");var sliceBuffer=require("arraybuffer.slice");var after=require("after");var utf8=require("./utf8");var base64encoder;if(global&&global.ArrayBuffer){base64encoder=require("base64-arraybuffer")}var isAndroid=typeof navigator!=="undefined"&&/Android/i.test(navigator.userAgent);var isPhantomJS=typeof navigator!=="undefined"&&/PhantomJS/i.test(navigator.userAgent);var dontSendBlobs=isAndroid||isPhantomJS;exports.protocol=3;var packets=exports.packets={open:0,close:1,ping:2,pong:3,message:4,upgrade:5,noop:6};var packetslist=keys(packets);var err={type:"error",data:"parser error"};var Blob=require("blob");exports.encodePacket=function(c,f,d,e){if(typeof f==="function"){e=f;f=false}if(typeof d==="function"){e=d;d=null}var a=(c.data===undefined)?undefined:c.data.buffer||c.data;if(global.ArrayBuffer&&a instanceof ArrayBuffer){return encodeArrayBuffer(c,f,e)}else{if(Blob&&a instanceof global.Blob){return encodeBlob(c,f,e)}}if(a&&a.base64){return encodeBase64Object(c,e)}var b=packets[c.type];if(undefined!==c.data){b+=d?utf8.encode(String(c.data),{strict:false}):String(c.data)}return e(""+b)};function encodeBase64Object(b,c){var a="b"+exports.packets[b.type]+b.data.data;return c(a)}function encodeArrayBuffer(e,g,f){if(!g){return exports.encodeBase64Packet(e,f)}var d=e.data;var c=new Uint8Array(d);var b=new Uint8Array(1+d.byteLength);b[0]=packets[e.type];for(var a=0;a<c.length;a++){b[a+1]=c[a]}return f(b.buffer)}function encodeBlobAsArrayBuffer(b,d,c){if(!d){return exports.encodeBase64Packet(b,c)}var a=new FileReader();a.onload=function(){b.data=a.result;exports.encodePacket(b,d,true,c)};return a.readAsArrayBuffer(b.data)}function encodeBlob(c,e,d){if(!e){return exports.encodeBase64Packet(c,d)}if(dontSendBlobs){return encodeBlobAsArrayBuffer(c,e,d)}var b=new Uint8Array(1);b[0]=packets[c.type];var a=new Blob([b.buffer,c.data]);return d(a)}exports.encodeBase64Packet=function(a,j){var k="b"+exports.packets[a.type];if(Blob&&a.data instanceof global.Blob){var f=new FileReader();f.onload=function(){var e=f.result.split(",")[1];j(k+e)};return f.readAsDataURL(a.data)}var h;try{h=String.fromCharCode.apply(null,new Uint8Array(a.data))}catch(g){var b=new Uint8Array(a.data);var c=new Array(b.length);for(var d=0;d<b.length;d++){c[d]=b[d]}h=String.fromCharCode.apply(null,c)}k+=global.btoa(h);return j(k)};exports.decodePacket=function(e,f,a){if(e===undefined){return err}if(typeof e==="string"){if(e.charAt(0)==="b"){return exports.decodeBase64Packet(e.substr(1),f)}if(a){e=tryDecode(e);if(e===false){return err}}var d=e.charAt(0);if(Number(d)!=d||!packetslist[d]){return err}if(e.length>1){return{type:packetslist[d],data:e.substring(1)}}else{return{type:packetslist[d]}}}var b=new Uint8Array(e);var d=b[0];var c=sliceBuffer(e,1);if(Blob&&f==="blob"){c=new Blob([c])}return{type:packetslist[d],data:c}};function tryDecode(a){try{a=utf8.decode(a,{strict:false})}catch(b){return false}return a}exports.decodeBase64Packet=function(c,d){var a=packetslist[c.charAt(0)];if(!base64encoder){return{type:a,data:{base64:true,data:c.substr(1)}}}var b=base64encoder.decode(c.substr(1));if(d==="blob"&&Blob){b=new Blob([b])}return{type:a,data:b}};exports.encodePayload=function(d,f,e){if(typeof f==="function"){e=f;f=null}var c=hasBinary(d);if(f&&c){if(Blob&&!dontSendBlobs){return exports.encodePayloadAsBlob(d,e)}return exports.encodePayloadAsArrayBuffer(d,e)}if(!d.length){return e("0:")}function a(g){return g.length+":"+g}function b(h,g){exports.encodePacket(h,!c?false:f,false,function(i){g(null,a(i))})}map(d,b,function(h,g){return e(g.join(""))})};function map(e,g,b){var a=new Array(e.length);var f=after(e.length,b);var c=function(j,k,h){g(k,function(i,l){a[j]=l;h(i,a)})};for(var d=0;d<e.length;d++){c(d,e[d],f)}}exports.decodePayload=function(h,a,m){if(typeof h!=="string"){return exports.decodePayloadAsBinary(h,a,m)}if(typeof a==="function"){m=a;a=null}var b;if(h===""){return m(err,0,1)}var c="",d,e;for(var j=0,f=h.length;j<f;j++){var g=h.charAt(j);if(g!==":"){c+=g;continue}if(c===""||(c!=(d=Number(c)))){return m(err,0,1)}e=h.substr(j+1,d);if(c!=e.length){return m(err,0,1)}if(e.length){b=exports.decodePacket(e,a,false);if(err.type===b.type&&err.data===b.data){return m(err,0,1)}var k=m(b,j+d,f);if(false===k){return}}j+=d;c=""}if(c!==""){return m(err,0,1)}};exports.encodePayloadAsArrayBuffer=function(b,c){if(!b.length){return c(new ArrayBuffer(0))}function a(e,d){exports.encodePacket(e,true,true,function(f){return d(null,f)})}map(b,a,function(e,g){var h=g.reduce(function(j,k){var i;if(typeof k==="string"){i=k.length}else{i=k.byteLength}return j+i.toString().length+i+2},0);var f=new Uint8Array(h);var d=0;g.forEach(function(n){var j=typeof n==="string";var m=n;if(j){var k=new Uint8Array(n.length);for(var l=0;l<n.length;l++){k[l]=n.charCodeAt(l)}m=k.buffer}if(j){f[d++]=0}else{f[d++]=1}var o=m.byteLength.toString();for(var l=0;l<o.length;l++){f[d++]=parseInt(o[l])}f[d++]=255;var k=new Uint8Array(m);for(var l=0;l<k.length;l++){f[d++]=k[l]}});return c(f.buffer)})};exports.encodePayloadAsBlob=function(b,c){function a(e,d){exports.encodePacket(e,true,true,function(m){var k=new Uint8Array(1);k[0]=1;if(typeof m==="string"){var g=new Uint8Array(m.length);for(var j=0;j<m.length;j++){g[j]=m.charCodeAt(j)}m=g.buffer;k[0]=0}var f=(m instanceof ArrayBuffer)?m.byteLength:m.size;var n=f.toString();var l=new Uint8Array(n.length+1);for(var j=0;j<n.length;j++){l[j]=parseInt(n[j])}l[n.length]=255;if(Blob){var h=new Blob([k.buffer,l.buffer,m]);d(null,h)}})}map(b,a,function(e,d){return c(new Blob(d))})};exports.decodePayloadAsBinary=function(h,a,n){if(typeof a==="function"){n=a;a=null}var m=h;var o=[];while(m.byteLength>0){var b=new Uint8Array(m);var c=b[0]===0;var l="";for(var g=1;;g++){if(b[g]===255){break}if(l.length>310){return n(err,0,1)}l+=b[g]}m=sliceBuffer(m,2+l.length);l=parseInt(l);var f=sliceBuffer(m,0,l);if(c){try{f=String.fromCharCode.apply(null,new Uint8Array(f))}catch(j){var d=new Uint8Array(f);f="";for(var g=0;g<d.length;g++){f+=String.fromCharCode(d[g])}}}o.push(f);m=sliceBuffer(m,l)}var k=o.length;o.forEach(function(e,p){n(exports.decodePacket(e,a,true),p,k)})};