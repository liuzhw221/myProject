var Blob=require("../");var expect=require("expect.js");describe("blob",function(){if(!Blob){it("should not have a blob or a blob builder in the global namespace, or blob should not be a constructor function if the module exports false",function(){try{var b=(new Uint8Array(5)).buffer;global.Blob([b]);expect().fail("Blob shouldn't be constructable")}catch(c){}var a=global.BlobBuilder||global.WebKitBlobBuilder||global.MSBlobBuilder||global.MozBlobBuilder;expect(a).to.be(undefined)})}else{it("should encode a proper sized blob when given a string argument",function(){var a=new Blob(["hi"]);expect(a.size).to.be(2)});it("should encode a blob with proper size when given two strings as arguments",function(){var a=new Blob(["hi","hello"]);expect(a.size).to.be(7)});it("should encode arraybuffers with right content",function(d){var f=new Uint8Array(5);for(var e=0;e<5;e++){f[e]=e}var a=new Blob([f.buffer]);var c=new FileReader();c.onload=function(){var g=new Uint8Array(this.result);for(var b=0;b<5;b++){expect(g[b]).to.be(b)}d()};c.readAsArrayBuffer(a)});it("should encode typed arrays with right content",function(d){var f=new Uint8Array(5);for(var e=0;e<5;e++){f[e]=e}var a=new Blob([f]);var c=new FileReader();c.onload=function(){var g=new Uint8Array(this.result);for(var b=0;b<5;b++){expect(g[b]).to.be(b)}d()};c.readAsArrayBuffer(a)});it("should encode sliced typed arrays with right content",function(d){var f=new Uint8Array(5);for(var e=0;e<5;e++){f[e]=e}var a=new Blob([f.subarray(2)]);var c=new FileReader();c.onload=function(){var g=new Uint8Array(this.result);for(var b=0;b<3;b++){expect(g[b]).to.be(b+2)}d()};c.readAsArrayBuffer(a)});it("should encode with blobs",function(d){var f=new Uint8Array(5);for(var e=0;e<5;e++){f[e]=e}var a=new Blob([new Blob([f.buffer])]);var c=new FileReader();c.onload=function(){var g=new Uint8Array(this.result);for(var b=0;b<5;b++){expect(g[b]).to.be(b)}d()};c.readAsArrayBuffer(a)});it("should enode mixed contents to right size",function(){var d=new Uint8Array(5);for(var c=0;c<5;c++){d[c]=c}var a=new Blob([d.buffer,"hello"]);expect(a.size).to.be(10)});it("should accept mime type",function(){var a=new Blob(["hi","hello"],{type:"text/html"});expect(a.type).to.be("text/html")})}});