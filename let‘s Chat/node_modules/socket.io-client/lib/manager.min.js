var eio=require("engine.io-client");var Socket=require("./socket");var Emitter=require("component-emitter");var parser=require("socket.io-parser");var on=require("./on");var bind=require("component-bind");var debug=require("debug")("socket.io-client:manager");var indexOf=require("indexof");var Backoff=require("backo2");var has=Object.prototype.hasOwnProperty;module.exports=Manager;function Manager(c,b){if(!(this instanceof Manager)){return new Manager(c,b)}if(c&&("object"===typeof c)){b=c;c=undefined}b=b||{};b.path=b.path||"/socket.io";this.nsps={};this.subs=[];this.opts=b;this.reconnection(b.reconnection!==false);this.reconnectionAttempts(b.reconnectionAttempts||Infinity);this.reconnectionDelay(b.reconnectionDelay||1000);this.reconnectionDelayMax(b.reconnectionDelayMax||5000);this.randomizationFactor(b.randomizationFactor||0.5);this.backoff=new Backoff({min:this.reconnectionDelay(),max:this.reconnectionDelayMax(),jitter:this.randomizationFactor()});this.timeout(null==b.timeout?20000:b.timeout);this.readyState="closed";this.uri=c;this.connecting=[];this.lastPing=null;this.encoding=false;this.packetBuffer=[];var a=b.parser||parser;this.encoder=new a.Encoder();this.decoder=new a.Decoder();this.autoConnect=b.autoConnect!==false;if(this.autoConnect){this.open()}}Manager.prototype.emitAll=function(){this.emit.apply(this,arguments);for(var a in this.nsps){if(has.call(this.nsps,a)){this.nsps[a].emit.apply(this.nsps[a],arguments)}}};Manager.prototype.updateSocketIds=function(){for(var a in this.nsps){if(has.call(this.nsps,a)){this.nsps[a].id=this.generateId(a)}}};Manager.prototype.generateId=function(a){return(a==="/"?"":(a+"#"))+this.engine.id};Emitter(Manager.prototype);Manager.prototype.reconnection=function(a){if(!arguments.length){return this._reconnection}this._reconnection=!!a;return this};Manager.prototype.reconnectionAttempts=function(a){if(!arguments.length){return this._reconnectionAttempts}this._reconnectionAttempts=a;return this};Manager.prototype.reconnectionDelay=function(a){if(!arguments.length){return this._reconnectionDelay}this._reconnectionDelay=a;this.backoff&&this.backoff.setMin(a);return this};Manager.prototype.randomizationFactor=function(a){if(!arguments.length){return this._randomizationFactor}this._randomizationFactor=a;this.backoff&&this.backoff.setJitter(a);return this};Manager.prototype.reconnectionDelayMax=function(a){if(!arguments.length){return this._reconnectionDelayMax}this._reconnectionDelayMax=a;this.backoff&&this.backoff.setMax(a);return this};Manager.prototype.timeout=function(a){if(!arguments.length){return this._timeout}this._timeout=a;return this};Manager.prototype.maybeReconnectOnOpen=function(){if(!this.reconnecting&&this._reconnection&&this.backoff.attempts===0){this.reconnect()}};Manager.prototype.open=Manager.prototype.connect=function(d,e){debug("readyState %s",this.readyState);if(~this.readyState.indexOf("open")){return this}debug("opening %s",this.uri);this.engine=eio(this.uri,this.opts);var a=this.engine;var c=this;this.readyState="opening";this.skipReconnect=false;var g=on(a,"open",function(){c.onopen();d&&d()});var b=on(a,"error",function(j){debug("connect_error");c.cleanup();c.readyState="closed";c.emitAll("connect_error",j);if(d){var i=new Error("Connection error");i.data=j;d(i)}else{c.maybeReconnectOnOpen()}});if(false!==this._timeout){var f=this._timeout;debug("connect attempt will timeout after %d",f);var h=setTimeout(function(){debug("connect attempt timed out after %d",f);g.destroy();a.close();a.emit("error","timeout");c.emitAll("connect_timeout",f)},f);this.subs.push({destroy:function(){clearTimeout(h)}})}this.subs.push(g);this.subs.push(b);return this};Manager.prototype.onopen=function(){debug("open");this.cleanup();this.readyState="open";this.emit("open");var a=this.engine;this.subs.push(on(a,"data",bind(this,"ondata")));this.subs.push(on(a,"ping",bind(this,"onping")));this.subs.push(on(a,"pong",bind(this,"onpong")));this.subs.push(on(a,"error",bind(this,"onerror")));this.subs.push(on(a,"close",bind(this,"onclose")));this.subs.push(on(this.decoder,"decoded",bind(this,"ondecoded")))};Manager.prototype.onping=function(){this.lastPing=new Date();this.emitAll("ping")};Manager.prototype.onpong=function(){this.emitAll("pong",new Date()-this.lastPing)};Manager.prototype.ondata=function(a){this.decoder.add(a)};Manager.prototype.ondecoded=function(a){this.emit("packet",a)};Manager.prototype.onerror=function(a){debug("error",a);this.emitAll("error",a)};Manager.prototype.socket=function(e,d){var a=this.nsps[e];if(!a){a=new Socket(this,e,d);this.nsps[e]=a;var c=this;a.on("connecting",b);a.on("connect",function(){a.id=c.generateId(e)});if(this.autoConnect){b()}}function b(){if(!~indexOf(c.connecting,a)){c.connecting.push(a)}}return a};Manager.prototype.destroy=function(a){var b=indexOf(this.connecting,a);if(~b){this.connecting.splice(b,1)}if(this.connecting.length){return}this.close()};Manager.prototype.packet=function(b){debug("writing packet %j",b);var a=this;if(b.query&&b.type===0){b.nsp+="?"+b.query}if(!a.encoding){a.encoding=true;this.encoder.encode(b,function(d){for(var c=0;c<d.length;c++){a.engine.write(d[c],b.options)}a.encoding=false;a.processPacketQueue()})}else{a.packetBuffer.push(b)}};Manager.prototype.processPacketQueue=function(){if(this.packetBuffer.length>0&&!this.encoding){var a=this.packetBuffer.shift();this.packet(a)}};Manager.prototype.cleanup=function(){debug("cleanup");var c=this.subs.length;for(var a=0;a<c;a++){var b=this.subs.shift();b.destroy()}this.packetBuffer=[];this.encoding=false;this.lastPing=null;this.decoder.destroy()};Manager.prototype.close=Manager.prototype.disconnect=function(){debug("disconnect");this.skipReconnect=true;this.reconnecting=false;if("opening"===this.readyState){this.cleanup()}this.backoff.reset();this.readyState="closed";if(this.engine){this.engine.close()}};Manager.prototype.onclose=function(a){debug("onclose");this.cleanup();this.backoff.reset();this.readyState="closed";this.emit("close",a);if(this._reconnection&&!this.skipReconnect){this.reconnect()}};Manager.prototype.reconnect=function(){if(this.reconnecting||this.skipReconnect){return this}var a=this;if(this.backoff.attempts>=this._reconnectionAttempts){debug("reconnect failed");this.backoff.reset();this.emitAll("reconnect_failed");this.reconnecting=false}else{var b=this.backoff.duration();debug("will wait %dms before reconnect attempt",b);this.reconnecting=true;var c=setTimeout(function(){if(a.skipReconnect){return}debug("attempting reconnect");a.emitAll("reconnect_attempt",a.backoff.attempts);a.emitAll("reconnecting",a.backoff.attempts);if(a.skipReconnect){return}a.open(function(d){if(d){debug("reconnect attempt error");a.reconnecting=false;a.reconnect();a.emitAll("reconnect_error",d.data)}else{debug("reconnect success");a.onreconnect()}})},b);this.subs.push({destroy:function(){clearTimeout(c)}})}};Manager.prototype.onreconnect=function(){var a=this.backoff.attempts;this.reconnecting=false;this.backoff.reset();this.updateSocketIds();this.emitAll("reconnect",a)};